"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта
"""
from pympler import asizeof
from numpy import array

""" Курс: Основы языка Python
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
| 31 22 |
| 37 43 |
| 51 86 |

| 3 5 32 |
| 2 4 6 |
| -1 64 -8 |

| 3 5 8 3 |
| 8 3 7 1 |
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и пр.
"""

"""
Сделано: массив заменен с list на array из numpy
Занимает: 384кб взаместо 704кб
"""


# Изначальный вариант
class Matrix:

    def __init__(self, matrix_list):
        self.matrix_list = list(matrix_list)

    def __str__(self):
        return '\n'.join(str(el) for el in self.matrix_list)

    def __add__(self, other):
        result = []

        for item in zip(self.matrix_list, other.matrix_list):
            result.append([sum([el, num]) for el, num in zip(*item)])

        return Matrix(result)


m = Matrix([[31, 32], [37, 43], [51, 86]])
m1 = Matrix([[3, 5, 32], [2, 4, 6], [-1, 64, -8]])
print(m + m1)
print(asizeof.asizeof(m))  # -> 704


# Оптимизированный вариант

class Matrix:

    def __init__(self, matrix_list):
        self.matrix_list = array(matrix_list)

    def __str__(self):
        return '\n'.join(str(el) for el in self.matrix_list)

    def __add__(self, other):
        result = []
        for item in zip(self.matrix_list, other.matrix_list):
            result.append([sum([el, num]) for el, num in zip(*item)])

        return Matrix(result)


m = Matrix([[31, 32], [37, 43], [51, 86]])
m1 = Matrix([[3, 5, 32], [2, 4, 6], [-1, 64, -8]])
print(m + m1)
print(asizeof.asizeof(m))  # -> 384
